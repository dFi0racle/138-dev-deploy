name: CI/CD

permissions:
  contents: write
  pull-requests: write
  actions: write

on:
  push:
    branches: [ main, 'devin/*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: [ethereum, polygon, arbitrum, optimism, avalanche, bsc, base, gnosis, fantom, metis]
    steps:
      - uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.3.0
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.3'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - run: pnpm run lint
      - run: pnpm test
        env:
          NETWORK: ${{ matrix.network }}
          RPC_URL: ${{ secrets.RPC_URL }}
          DEFENDER_API_KEY: ${{ secrets.DEFENDER_API_KEY }}
          DEFENDER_API_SECRET: ${{ secrets.DEFENDER_API_SECRET }}
          DEFENDER_TEAM_API_KEY: ${{ secrets.DEFENDER_TEAM_API_KEY }}
          DEFENDER_TEAM_SECRET_KEY: ${{ secrets.DEFENDER_TEAM_SECRET_KEY }}
      - run: pnpm run coverage
        env:
          NETWORK: ${{ matrix.network }}
          RPC_URL: ${{ secrets.RPC_URL }}
          DEFENDER_API_KEY: ${{ secrets.DEFENDER_API_KEY }}
          DEFENDER_API_SECRET: ${{ secrets.DEFENDER_API_SECRET }}
          DEFENDER_TEAM_API_KEY: ${{ secrets.DEFENDER_TEAM_API_KEY }}
          DEFENDER_TEAM_SECRET_KEY: ${{ secrets.DEFENDER_TEAM_SECRET_KEY }}

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: [ethereum, polygon, arbitrum, optimism, avalanche, bsc, base, gnosis, fantom, metis]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.3.0
      - name: Deploy to network
        env:
          NETWORK: ${{ matrix.network }}
          RPC_URL: ${{ secrets.RPC_URL }}
          DEFENDER_API_KEY: ${{ secrets.DEFENDER_API_KEY }}
          DEFENDER_API_SECRET: ${{ secrets.DEFENDER_API_SECRET }}
          DEFENDER_TEAM_API_KEY: ${{ secrets.DEFENDER_TEAM_API_KEY }}
          DEFENDER_TEAM_SECRET_KEY: ${{ secrets.DEFENDER_TEAM_SECRET_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: pnpm hardhat run scripts/deploy-ccip.ts --network ${{ matrix.network }}
